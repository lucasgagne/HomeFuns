#The position is always just an integer of pennies. A move is an integer of pennies removed
def doMove(position, move):
    if primitiveValue(position):
        return position
    if move > 2 or move > position:
        return position
    elif move ==2 or move == 1:
        return position - move
def generateMove(position):
    if position == 1:
        return {1}
    elif primitiveValue(position) == False:
        return {}
    else:
        return {1, 2}
def primitiveValue(position):
    if position == 0:
        return "lose"
    if position == 1 or position == 2:
        return "win"

def solve(position):
    return solveHelper(position, {})
def solveHelper(position, memoized):
    if primitiveValue(position) != None:
        return primitiveValue(position)
    for move in generateMove(position):
        
        newPos = doMove(position, move)
        if newPos not in memoized:
            result = solveHelper(newPos, memoized)
            memoized[newPos] = result
            if result == "lose":
                return "win"
        else:
            if memoized[newPos] == "lose":
                return "win"
    return "lose"



def tester():
    for x in range(101):
        print(x,": ", solve(x))

tester()


